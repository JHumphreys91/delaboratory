#summary delaboratory features

delaboratory is *NOT a RAW processor* and is *NOT a per-pixel editor*, this is a *color correction utility*

current features:

  * floating point precision - it means that internal code uses not 8-bit (like Gimp), not 16-bit (like many apps), but *float for each color component*, input and output will use 16-bit tiffs or 8-bit jpgs

  * native support for *RGB*/*BW*, *CMY*/*CMYK*, *XYZ*/*LAB*, *HSV*/*HSL* colorspaces - each colorspace is equal, can be displayed, can be edited same way, the only limitation is the conversion between two colorspaces, sometimes it will require two steps (CMYK to RGB then RGB to HSV, instead CMYK to HSV), because it's boring to create lots of similar conversion functions :)

  * *adjustment layers* - it's not possible to "flatten" like in Gimp, so each operation is available for edit, the more layers you create the more complex the project will be, it's possible to change the "source" layer of each layer and colorspace, configuration window of each frame can stay on screen, so it's possible to modify - for instance - mixer and curves at same time, supported layer types: conversion, mixer, curves, blend

  * *realtime* - premature optimization is root of all evil so I am not going to do strange stuff while the project is far from complete, but it should be possible to use delaboratory on modern desktop computer in realtime, without waiting for anything, when you move slider you should see how preview changes, there is a danger that usage of many layers will eat memory, but that's OK, the real problem is not to slow-down operations and calculate only these previews which are really needed at given time

  * *curves* - each channel in each colorspace can be processed by curve, marker show position on curve (taken from currently touched sapler), *current implementation of curves is VERY SIMPLIFIED* (no spline/bezier, just straight lines), 

  * *mixer* - from each colorspace to each colorspace, for instance one can mix RGB colorspace to achieve BW (black and white) image, but it's also possible to mix from RGB to LAB or CMYK if you want (there are no limitations at all), natural usage is of course mix RGB to RGB or LAB to LAB

  * *blend* - it's possible to blend all channels (it's not yet clear what to do when number of channel differs) or single channel, or blend single channel to all channels, supported blend modes: *normal*, *multiply*, *screen*, *overlay*

  * *blur* - each channel can be blured vertically or horizontally, the radius of the blur is not set in pixels but in the ratio of image size (width or height), so radius 0.1 means 10% of image size, current blur implementation is very simple (it's a box blur)

  * *ND* - Neutral Density filter is used to darken some parts of the photo, there are 4 modes available: *vignette*, *horizontal*, *vertical* and *flat*

  * *lockable samplers* - it's possible to lock multiple samplers on given places and watch color values (any colorspace) in this place during the edit

plans for next releases:

  * curve types (b-spline, etc)
  * blend mask 
  * gaussian blur, lens blur, surface blur (in that order)
  * more blend types
  * ND per channel (currently it works for whole layer)
  * more shapes for ND
  * add noise 
  * equalizer (idea from HSV equalizer in RawTherapee) - something between curves and mixer
  * c2g-like effect like the one in GIMP/GEGL
  * update preview per channel instead update all channels (speed)
  * update preview in another thread (c2g-like effect will be slow, blur is already slow when big radius is set)
  * save layer stack (save project)
  * combos - predefined set of layers so one could just click one button and generate whole stack of glamour postprocessing, cross processing, nice bw conversion, etc... 
  * there are few more interesting colorspaces to add, like Munsell
  * better structure of layer properties (design)
  * multiple source images
  * quick preview of multiple channels (like R/G/B, C/M/Y/K, L/A/B in one window)
  * reverse engineering tools for processed images - take the source image, take final image and let the algorithm guess curves/mixer/otherstuff which generated it (see elsamuko Get Curves plugin for the idea)
  * reset button for each layer
  * random button, maybe randomly generated variants to choose (see biomorphs for the idea), this way user could click the random button, accept best choice and the image will evolve
  * wavelets (see RawTherapee and GIMP wavelets plugins)
  * more filters (see GMIC)

don't expect (may change in future):

  * drawing support
  * healing brush, clone tool
  * dodge/burn
  * RAW support

not sure about:

  * color profiles, GCR setting in CMYK (pointless?)
  * zoom support - I don't have any idea yet - how to do it fast when multiple layers are present and we deal with photos larger than 10 megapixels? imagine multiple blurs each with 1000-pixel radius
  * blend with color (like ND but not gray, so it won't work per-channel), not sure how to do it in different colorspaces, but some kind of color-filler must be implemented
  * sharpening - should be done in per-pixel editor like GIMP, but from the other side - it could be nice to have USM if blur is already here and it will be possible to sharpen only some channels, like K in CMYK or L in LAB
  * some kind of Zone System support, however I am not yet sure how it can be useful except as view type






